{"version":3,"file":"collect-stories-4874c973.js","sources":["../../node_modules/svelte/src/runtime/store/index.js","../../node_modules/@storybook/addon-svelte-csf/dist/components/context.js","../../node_modules/@storybook/addon-svelte-csf/dist/components/Meta.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/components/Story.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/components/Template.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/index.js","../../node_modules/@storybook/addon-svelte-csf/dist/components/RegisterContext.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/components/RenderContext.svelte","../../node_modules/@storybook/addon-svelte-csf/dist/parser/extract-id.js","../../node_modules/@storybook/addon-svelte-csf/dist/parser/collect-stories.js"],"sourcesContent":["import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","import { getContext, hasContext, setContext } from 'svelte';\nimport { writable } from 'svelte/store';\nconst CONTEXT_KEY = 'storybook-registration-context';\nconst CONTEXT_KEY_COMPONENT = 'storybook-registration-context-component';\nexport function createRenderContext(props = {}) {\n    setContext(CONTEXT_KEY, {\n        render: true,\n        register: () => { },\n        meta: {},\n        args: {},\n        ...props,\n    });\n}\nexport function createRegistrationContext(repositories) {\n    setContext(CONTEXT_KEY, {\n        render: false,\n        register: (story) => {\n            repositories.stories.push(story);\n        },\n        set meta(value) {\n            // eslint-disable-next-line no-param-reassign\n            repositories.meta = value;\n        },\n        args: {},\n    });\n}\nexport function useContext() {\n    if (!hasContext(CONTEXT_KEY)) {\n        createRenderContext();\n    }\n    return getContext(CONTEXT_KEY);\n}\nexport function getStoryRenderContext() {\n    if (!hasContext(CONTEXT_KEY_COMPONENT)) {\n        setContext(CONTEXT_KEY_COMPONENT, { argsStore: writable({}), storyContextStore: writable({}) });\n    }\n    return getContext(CONTEXT_KEY_COMPONENT);\n}\nexport function setStoryRenderContext(args, storyContext) {\n    const ctx = getStoryRenderContext();\n    ctx.argsStore.set(args);\n    ctx.storyContextStore.set(storyContext);\n}\n","<script>\n  import { useContext } from './context';\n\n  useContext().meta = $$props;\n</script>\n\n","<script>\n  import { getStoryRenderContext, useContext } from './context';\n\n  const context = useContext();\n\n  export let name;\n  export let template = null;\n\n  if (!name) {\n    throw new Error('Missing Story name');\n  }\n\n  context.register({\n    name,\n    ...$$restProps,\n    template: template != null ? template : !$$slots.default ? 'default' : null,\n  });\n\n  $: render = context.render && !context.templateName && context.storyName == name;\n  const ctx = getStoryRenderContext();\n  const args = ctx.argsStore;\n  const storyContext = ctx.storyContextStore;\n</script>\n\n{#if render}\n  <slot {...$args} context={$storyContext} args={$args} />\n{/if}\n","<script>\n  import { useContext, getStoryRenderContext } from './context';\n\n  const context = useContext();\n\n  export let id = 'default';\n\n  context.register({ id, isTemplate: true });\n\n  $: render = context.render && context.templateId === id;\n  const ctx = getStoryRenderContext();\n  const args = ctx.argsStore;\n  const storyContext = ctx.storyContextStore;\n</script>\n\n{#if render}\n  <slot {...$args} context={$storyContext} args={$args} />\n{/if}\n","export { default as Meta } from './components/Meta.svelte';\nexport { default as Story } from './components/Story.svelte';\nexport { default as Template } from './components/Template.svelte';\n\nif (module?.hot?.decline) {\n  module.hot.decline();\n}\n","<script>\n  import { createRegistrationContext } from './context';\n\n  export let Stories;\n  export let repositories;\n\n  createRegistrationContext(repositories);\n\n</script>\n\n<svelte:component this={Stories} />\n","<script>\n  /**\n   * @component\n   * @wrapper\n   */\n  import { createRenderContext, setStoryRenderContext } from './context';\n\n  export let Stories;\n  export let args = {};\n  export let storyContext = {};\n\n  createRenderContext($$props);\n\n  $: setStoryRenderContext(args, storyContext);\n</script>\n\n<svelte:component this={Stories} />\n","import { logger } from '@storybook/client-logger';\nfunction hashCode(str) {\n    const h = str\n        .split('')\n        // eslint-disable-next-line no-bitwise\n        .reduce((prevHash, currVal) => ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0, 0);\n    return Math.abs(h).toString(16);\n}\n// extract a story id\nexport function extractId({ id, name, }, allocatedIds = []) {\n    if (id) {\n        return id;\n    }\n    if (!name) {\n        throw new Error('Id or Name should be specified');\n    }\n    let generated = name.replace(/\\W+(.|$)/g, (_, chr) => chr.toUpperCase());\n    if (allocatedIds.indexOf(generated) >= 0) {\n        logger.warn(`Story name conflict with exports - Please add an explicit id for story ${name}`);\n        generated += hashCode(name);\n    }\n    return generated;\n}\n","/* eslint-env browser */\nimport RegisterContext from '../components/RegisterContext.svelte';\nimport RenderContext from '../components/RenderContext.svelte';\nimport { combineParameters } from '@storybook/client-api';\nimport { extractId } from './extract-id.js';\nimport { logger } from '@storybook/client-logger';\nconst createFragment = document.createDocumentFragment\n    ? () => document.createDocumentFragment()\n    : () => document.createElement('div');\nexport default (StoriesComponent, { stories = {}, allocatedIds = [] }, exportedMeta = undefined) => {\n    const repositories = {\n        meta: null,\n        stories: [],\n    };\n    // extract all stories\n    try {\n        const context = new RegisterContext({\n            target: createFragment(),\n            props: {\n                Stories: StoriesComponent,\n                repositories,\n            },\n        });\n        context.$destroy();\n    }\n    catch (e) {\n        logger.error(`Error extracting stories ${e.toString()}`, e);\n    }\n    const meta = exportedMeta || repositories.meta;\n    if (!meta) {\n        logger.error('Missing <Meta/> tag');\n        return {};\n    }\n    const { component: globalComponent } = meta;\n    // collect templates id\n    const templatesId = repositories.stories\n        .filter((story) => story.isTemplate)\n        .map((story) => story.id);\n    // check for duplicate templates\n    const duplicateTemplatesId = templatesId.filter((item, index) => templatesId.indexOf(item) !== index);\n    if (duplicateTemplatesId.length > 0) {\n        logger.warn(`Found duplicates templates id for stories '${meta.name}': ${duplicateTemplatesId}`);\n    }\n    return {\n        meta,\n        stories: repositories.stories\n            .filter((story) => !story.isTemplate)\n            .reduce((all, story) => {\n            const { id, name, template, component, source = false, ...props } = story;\n            const storyId = extractId(story, allocatedIds);\n            if (!storyId) {\n                return all;\n            }\n            const unknownTemplate = template != null && templatesId.indexOf(template) < 0;\n            const storyFn = (args, storyContext) => {\n                if (unknownTemplate) {\n                    throw new Error(`Story ${name} is referencing an unknown template ${template}`);\n                }\n                return {\n                    Component: RenderContext,\n                    props: {\n                        Stories: StoriesComponent,\n                        storyName: name,\n                        templateId: template,\n                        args,\n                        storyContext,\n                        sourceComponent: component || globalComponent,\n                    },\n                };\n            };\n            storyFn.storyName = name;\n            Object.entries(props).forEach(([k, v]) => {\n                storyFn[k] = v;\n            });\n            // inject story sources\n            const storyDef = stories[template ? `tpl:${template}` : storyId];\n            const hasArgs = storyDef ? storyDef.hasArgs : true;\n            // inject source snippet\n            const rawSource = storyDef ? storyDef.source : null;\n            if (rawSource) {\n                storyFn.parameters = combineParameters(storyFn.parameters || {}, {\n                    storySource: {\n                        source: rawSource,\n                    },\n                });\n            }\n            let snippet;\n            if (source === true || (source === false && !hasArgs)) {\n                snippet = rawSource;\n            }\n            else if (typeof source === 'string') {\n                snippet = source;\n            }\n            if (snippet) {\n                storyFn.parameters = combineParameters(storyFn.parameters || {}, {\n                    docs: { source: { code: snippet } },\n                });\n            }\n            // eslint-disable-next-line no-param-reassign\n            all[storyId] = storyFn;\n            return all;\n        }, {}),\n    };\n};\n"],"names":["subscriber_queue","writable","value","start","noop","stop","subscribers","set","new_value","safe_not_equal","run_queue","subscriber","i","update","fn","subscribe","run","invalidate","CONTEXT_KEY","CONTEXT_KEY_COMPONENT","createRenderContext","props","setContext","createRegistrationContext","repositories","story","useContext","hasContext","getContext","getStoryRenderContext","setStoryRenderContext","args","storyContext","ctx","$$props","create_if_block","context","name","template","$$restProps","$$slots","$$invalidate","render","id","_a","Stories","logger","hashCode","str","h","prevHash","currVal","extractId","allocatedIds","generated","_","chr","combineParameters","createFragment","parser","StoriesComponent","stories","exportedMeta","RegisterContext","e","meta","globalComponent","templatesId","duplicateTemplatesId","item","index","all","component","source","storyId","unknownTemplate","storyFn","RenderContext","k","v","storyDef","hasArgs","rawSource","snippet"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9]}