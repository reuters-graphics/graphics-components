{"version":3,"file":"PaddingReset.stories-1fe51a17.js","sources":["../../src/components/PaddingReset/stories/docs/component.md?raw","../../src/components/PaddingReset/PaddingReset.stories.svelte"],"sourcesContent":["export default \"Sometimes you want a visual element to be fluid, i.e., edge-to-edge, but keep padding on text that's adajcent to it.\\n\\nThe `PaddingReset` component resets padding on the `Article` well that's been cancelled by a `Block` with a `fluid` width.\\n\\n```svelte\\n<script>\\n  import { Block, PaddingReset } from '@reuters-graphics/graphics-components';\\n</script>\\n\\n<Block width=\\\"fluid\\\">\\n  <!-- An edge-to-edge image -->\\n  <img src=\\\"https//...\\\" alt=\\\"...\\\" width=\\\"100%\\\" />\\n  <PaddingReset>\\n    <p>A caption for the image that will still be padded.</p>\\n  </PaddingReset>\\n</Block>\\n```\\n\\nYou can also add the padding conditionally by using the `containerIsFluid` prop, which is what many other components in this library do.\\n\\n```svelte\\n<script>\\n  import { Block, PaddingReset } from '@reuters-graphics/graphics-components';\\n\\n  export let src = 'https://...';\\n  export let width = 'fluid';\\n</script>\\n\\n<Block width=\\\"{width}\\\">\\n  <img src=\\\"{src}\\\" alt=\\\"...\\\" width=\\\"100%\\\" />\\n  <PaddingReset containerIsFluid=\\\"{width === 'fluid'}\\\">\\n    <p>A caption for the image that will be padded when Block is fluid.</p>\\n  </PaddingReset>\\n</Block>\\n```\\n\"","<script>\n  import { Meta, Template, Story } from '@storybook/addon-svelte-csf';\n\n  // @ts-ignore\n  import componentDocs from './stories/docs/component.md?raw';\n\n  import PaddingReset from './PaddingReset.svelte';\n  import Block from '../Block/Block.svelte';\n\n  import { withComponentDocs } from '$lib/docs/utils/withParams.js';\n</script>\n\n<Meta\n  title=\"Components/PaddingReset\"\n  component=\"{PaddingReset}\"\n  {...withComponentDocs(componentDocs)}\n/>\n\n<Template let:args>\n  <Block width=\"fluid\">\n    <div class=\"outer\"></div>\n    <PaddingReset {...args}>\n      <div class=\"inner\"></div>\n    </PaddingReset>\n  </Block>\n</Template>\n\n<Story\n  name=\"Default\"\n  args=\"{{\n    containerIsFluid: true,\n  }}\"\n  let:args\n/>\n\n<style lang=\"scss\">\n  div {\n    height: 30px;\n    width: 100%;\n    margin-bottom: 2px;\n    &.outer {\n      background: grey;\n    }\n    &.inner {\n      background: salmon;\n    }\n  }\n</style>\n"],"names":["componentDocs","insert","target","div","anchor","ctx","PaddingReset","withComponentDocs"],"mappings":"2XAAA,MAAeA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;uFCsBTC,EAAwBC,EAAAC,EAAAC,CAAA,yDADRC,EAAI,CAAA,CAAA,oMADtBJ,EAAwBC,EAAAC,EAAAC,CAAA,oDACNC,EAAI,CAAA,CAAA,CAAA,CAAA,igBAPZC,CAAY,EACpBC,EAAkBP,CAAa,4MAejC,KAAA,CAAA,iBAAkB,EAAI;;;;;"}