{"version":3,"file":"Theme-f72fab71.js","sources":["../../src/components/Theme/utils/merge.js","../../src/components/Theme/Theme.svelte"],"sourcesContent":["function isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * Deep merges theme objects.\n */\nexport default function merge(target, ...sources) {\n  if (!sources.length) return target;\n  const source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, { [key]: {} });\n        merge(target[key], source[key]);\n      } else {\n        Object.assign(target, { [key]: source[key] });\n      }\n    }\n  }\n  return merge(target, ...sources);\n}\n","<!-- @component `Theme` [Read the docs.](https://reuters-graphics.github.io/graphics-components/?path=/docs/theming-Theme--default) -->\n<script context=\"module\" lang=\"ts\">\n  import light from './themes/light.js';\n  import dark from './themes/dark.js';\n  /**\n   * Pre-made themes you can import.\n   * @type {{ light, dark }}\n   */\n  export const themes = { light, dark };\n</script>\n\n<script lang=\"ts\">\n  import type { CustomTheme } from './@types/component';\n  /** Custom theme object. Can be a partial theme with just\n   * what you want to change.\n   */\n  export let theme: CustomTheme = {};\n\n  type Base = 'light' | 'dark';\n  /**\n   * Base theme is one of `light` or `dark` and will be merged\n   * with your custom theme to fill in any values you don't\n   * explicitly set.\n   */\n  export let base: Base = 'light';\n\n  import flatten from './utils/flatten';\n  import mergeThemes from './utils/merge';\n\n  /** @type {Theme} */\n  $: mergedTheme = mergeThemes({}, themes[base] || themes.light, theme);\n\n  $: cssVariables = Object.entries(flatten({ theme: mergedTheme }))\n    .map(([key, value]) => `--${key}: ${value};`)\n    .join(' ');\n</script>\n\n<div class=\"theme\" style=\"{cssVariables}\" style:display=\"contents\">\n  <!-- Clients can override the theme above by attaching custom properties to this element. -->\n  <div class=\"theme-client-override\" style=\"display: contents;\">\n    <!-- Themed content -->\n    <slot />\n  </div>\n</div>\n"],"names":["isObject","item","merge","target","sources","source","key","ctx","insert","div1","anchor","append","div0","themes","light","dark","theme","$$props","base","$$invalidate","mergedTheme","mergeThemes","cssVariables","flatten","value"],"mappings":"gMAAA,SAASA,EAASC,EAAM,CACtB,OAAOA,GAAQ,OAAOA,GAAS,UAAY,CAAC,MAAM,QAAQA,CAAI,CAChE,CAKe,SAASC,EAAMC,KAAWC,EAAS,CAChD,GAAI,CAACA,EAAQ,OAAQ,OAAOD,EAC5B,MAAME,EAASD,EAAQ,QAEvB,GAAIJ,EAASG,CAAM,GAAKH,EAASK,CAAM,EACrC,UAAWC,KAAOD,EACZL,EAASK,EAAOC,CAAG,CAAC,GACjBH,EAAOG,CAAG,GAAG,OAAO,OAAOH,EAAQ,CAAE,CAACG,CAAG,EAAG,CAAE,CAAA,CAAE,EACrDJ,EAAMC,EAAOG,CAAG,EAAGD,EAAOC,CAAG,CAAC,GAE9B,OAAO,OAAOH,EAAQ,CAAE,CAACG,CAAG,EAAGD,EAAOC,CAAG,CAAC,CAAE,EAIlD,OAAOJ,EAAMC,EAAQ,GAAGC,CAAO,CACjC,2MCe2BG,EAAY,CAAA,CAAA,oCAAvCC,EAMKL,EAAAM,EAAAC,CAAA,EAJHC,EAGKF,EAAAG,CAAA,yHALoBL,EAAY,CAAA,CAAA,0GA7BxBM,EAAM,CAAK,MAAAC,EAAO,KAAAC,CAAI,wDAQxB,MAAAC,EAAK,EAAA,EAAAC,EAQL,CAAA,KAAAC,EAAa,OAAO,EAAAD,2IAM5BE,EAAA,EAAAC,EAAcC,EAAgB,CAAA,EAAAR,EAAOK,CAAI,GAAKL,EAAO,MAAOG,CAAK,CAAA,gBAEnEG,EAAA,EAAEG,EAAe,OAAO,QAAQC,EAAU,CAAA,MAAOH,KAC/C,IAAG,CAAA,CAAGd,EAAKkB,CAAK,IAAA,KAAWlB,CAAG,KAAKkB,CAAK,GAAA,EACxC,KAAK,GAAG,CAAA;"}