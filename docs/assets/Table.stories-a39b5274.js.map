{"version":3,"file":"Table.stories-a39b5274.js","sources":["../../src/components/Table/stories/docs/component.md?raw","../../src/components/Table/stories/docs/metadata.md?raw","../../src/components/Table/stories/docs/truncate.md?raw","../../src/components/Table/stories/docs/paginate.md?raw","../../src/components/Table/stories/docs/search.md?raw","../../src/components/Table/stories/docs/filter.md?raw","../../src/components/Table/stories/docs/both.md?raw","../../src/components/Table/stories/docs/sort.md?raw","../../src/components/Table/stories/docs/format.md?raw","../../src/components/Table/stories/docs/style.md?raw","../../src/components/Table/LeftArrow.svelte","../../src/components/Table/RightArrow.svelte","../../src/components/Table/Pagination.svelte","../../src/components/Table/Select.svelte","../../src/components/Table/SortArrow.svelte","../../src/components/Table/utils.js","../../src/components/Table/Table.svelte","../../src/components/Table/Table.stories.svelte"],"sourcesContent":["export default \"Present structured data in a table. Consider making it interactive.\\n\\n---\\n\\n```svelte\\n<script>\\n  import { Table } from '@reuters-graphics/graphics-components';\\n\\n  // Import your data as JSON, or otherwise structure it\\n  import yourData from './stories/homeRuns.json';\\n</script>\\n\\n<table data=\\\"{yourData}\\\"></table>\\n```\\n\"","export default \"Set the `title`, `dek`, `notes` and `source` options to add supporting metadata above and below the table.\\n\\n```svelte\\n<Table data=\\\"{yourData}\\\" title=\\\"{'Career home run leaders'}\\\" dek=\\\"{'In baseball,\\na home run (also known as a \\\"dinger\\\" or \\\"tater\\\") occurs when a batter hits the\\nball over the outfield fence. When a home run is hit, the batter and any runners\\non base are able to score.'}\\\" notes=\\\"{'Note: As of Opening Day 2023'}\\\"\\nsource=\\\"{'Source: Baseball Reference'}\\\" />\\n```\\n\"","export default \"When your table has 10 or more rows, consider clipping it by setting the `truncated` option. When it is enabled, the table is clipped and readers must request to see all rows by clicking a button below the table. By default this configuration will limit the table to five records. You can change the cutoff point by adjusting the `truncateLength` option.\\n\\nThis is a good option for simple tables with row counts between 10 and 30. It works best when the table doesn't require interactivity.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  truncated=\\\"{true}\\\"\\n  source=\\\"{'Source: Baseball Reference'}\\\"\\n></table>\\n```\\n\"","export default \"When your table has lots of rows you should consider breaking it up into pages. This can be done by setting the `paginated` option.\\n\\nWhen it is enabled, readers can leaf through the data using a set of buttons below the table. By default there are 25 records per page. You can change the number by adjusting the `pageSize` option.\\n\\nThis is a good option when publishing large tables for readers to explore. It works well with interactive features like searching and filters.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  paginated=\\\"{true}\\\"\\n  title=\\\"{'Press Freedom Index'}\\\"\\n  source=\\\"{'Reporters Without Borders'}\\\"\\n></table>\\n```\\n\"","export default \"Allow users to search the table by setting the optional `searchable` variable. Modify the default text that appears in the box by supplying the `searchPlaceholder` option.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  searchable=\\\"{true}\\\"\\n  paginated=\\\"{true}\\\"\\n  title=\\\"{'Press Freedom Index'}\\\"\\n  notes=\\\"{'Source: Reporters Without Borders'}\\\"\\n></table>\\n```\\n\"","export default \"Allow users to filter the table by providing one of the attributes as the `filterField`. This works best with categorical columns.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  filterField=\\\"{'Region'}\\\"\\n  paginated=\\\"{true}\\\"\\n  title=\\\"{'Press Freedom Index'}\\\"\\n  notes=\\\"{'Source: Reporters Without Borders'}\\\"\\n></table>\\n```\\n\"","export default \"Feel free to both search and filter.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  searchable=\\\"{true}\\\"\\n  filterField=\\\"{'Region'}\\\"\\n  paginated=\\\"{true}\\\"\\n  title=\\\"{'Press Freedom Index'}\\\"\\n  dek=\\\"{'Reporters Without Borders ranks countries based on their level of press freedom using criteria such as the degree of media pluralism and violence against journalists.'}\\\"\\n  source=\\\"{'Source: Reporters Without Borders'}\\\"\\n></table>\\n```\\n\"","export default \"Allow users to sort the table by setting the `sortable` input. Specify the starting order by setting `sortField` to a column name and `sortDirection` to `ascending` or `descending`.\\n\\nBy default, all fields are sortable. If you'd like to limit the columns where sorting is allowed, provide a list to the `sortableFields` option.\\n\\n```svelte\\n<table\\n  data=\\\"{yourData}\\\"\\n  sortable=\\\"{true}\\\"\\n  sortField=\\\"{'Score'}\\\"\\n  sortDirection=\\\"{'descending'}\\\"\\n  title=\\\"{'Press Freedom Index'}\\\"\\n  source=\\\"{'Source: Reporters Without Borders'}\\\"\\n></table>\\n```\\n\"","export default \"Format column values by supplying functions keyed to field names with the `fieldFormatters` option. Columns are still sorted using the raw, underlying values.\\n\\nAmong other things, this feature can be used to provide a unit of measurement with numeric fields.\\n\\n```svelte\\n<script lang=\\\"ts\\\">\\n  const fieldFormatters = {\\n    'Net worth (in billions)': (v) => '$' + v.toFixed(1),\\n  };\\n</script>\\n\\n<table\\n  data=\\\"{yourData}\\\"\\n  fieldFormatters=\\\"{fieldFormatters}\\\"\\n  sortable=\\\"{true}\\\"\\n  sortField=\\\"{'Score'}\\\"\\n  sortDirection=\\\"{'descending'}\\\"\\n  title=\\\"{'The Richest Women in the World'}\\\"\\n  source=\\\"{'Source: Forbes'}\\\"\\n></table>\\n```\\n\"","export default \"You can tailor the table's appearance by crafting CSS that targets specific elements.\\n\\nLike other components, you can apply labels by providing the `id` of `cls` options, which allow you to make broad changes that remain limited to your element.\\n\\nEach column has a `data-field` attribute that contains the field's name. Use it to apply different styles to different fields. One common use is setting different text alignments on different columns.\\n\\n```svelte\\n<table\\n  id=\\\"{'custom-table'}\\\"\\n  data=\\\"{yourData}\\\"\\n  title=\\\"{'The Richest Women in the World'}\\\"\\n  source=\\\"{'Source: Forbes'}\\\"\\n></table>\\n\\n<style lang=\\\"scss\\\">\\n  /* Here we right align the table's numeric column. */\\n  #custom-table {\\n    [data-field='Net worth (in billions)'] {\\n      text-align: right;\\n    }\\n  }\\n</style>\\n```\\n\"","<svg\n  class=\"icon\"\n  aria-hidden=\"true\"\n  focusable=\"false\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 6 11\"\n  ><path\n    d=\"m1.76 5.134 3.887-3.887a.71.71 0 0 0 0-1.027.709.709 0 0 0-1.027 0l-4.4 4.4a.71.71 0 0 0 0 1.027l4.4 4.4c.147.147.367.22.513.22a.79.79 0 0 0 .513-.22.71.71 0 0 0 0-1.027L1.76 5.133Z\"\n  ></path></svg\n>\n\n<style>\n  .icon {\n    height: 1rem;\n    width: 1rem;\n    fill: currentColor;\n  }\n</style>\n","<svg\n  class=\"icon\"\n  aria-hidden=\"true\"\n  focusable=\"false\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 7 11\"\n  ><path\n    d=\"m6.013 4.987-4.4-4.4a.71.71 0 0 0-1.027 0 .709.709 0 0 0 0 1.027L4.473 5.5.586 9.387a.71.71 0 0 0 0 1.027c.147.147.293.22.513.22.22 0 .367-.073.514-.22l4.4-4.4a.71.71 0 0 0 0-1.027Z\"\n  ></path>\n</svg>\n\n<style>\n  .icon {\n    height: 1rem;\n    width: 1rem;\n    fill: currentColor;\n  }\n</style>\n","<script lang=\"ts\">\n  import { intcomma } from 'journalize';\n  import LeftArrow from './LeftArrow.svelte';\n  import RightArrow from './RightArrow.svelte';\n\n  /**\n   * The current page number.\n   * @type {number}\n   */\n  export let pageNumber: number = 1;\n\n  /**\n   * The default page size.\n   * @type {number}\n   */\n  export let pageSize: number = 25;\n\n  /**\n   * The number of records in the current page.\n   * @type {number}\n   */\n  export let pageLength: number = null;\n\n  /**\n   * The total number of records in the data set.\n   * @type {number}\n   */\n  export let n: number = null;\n\n  $: minRow = pageNumber * pageSize - pageSize + 1;\n  $: maxRow = pageNumber * pageSize - pageSize + pageLength;\n  $: numPages = Math.ceil(n / pageSize);\n\n  function goToPreviousPage() {\n    if (pageNumber > 1) {\n      pageNumber -= 1;\n    }\n  }\n\n  function goToNextPage() {\n    if (pageNumber < numPages) {\n      pageNumber += 1;\n    }\n  }\n</script>\n\n<nav aria-label=\"pagination\" class=\"pagination fmt-4\">\n  <button on:click=\"{goToPreviousPage}\" disabled=\"{pageNumber === 1}\"\n    ><div class=\"icon-wrapper\">\n      <LeftArrow />\n      <span class=\"visually-hidden\">Previous page</span>\n    </div></button\n  >\n  <div class=\"label fmx-2\" aria-label=\"page {pageNumber}\" aria-current=\"page\">\n    <div class=\"records body-caption mt-1.5\">\n      {minRow}-{maxRow} of {intcomma(n)}\n    </div>\n  </div>\n  <button\n    on:click=\"{goToNextPage}\"\n    disabled=\"{pageNumber === Math.ceil(n / pageSize)}\"\n    ><div class=\"icon-wrapper\">\n      <RightArrow />\n      <span class=\"visually-hidden\">Next page</span>\n    </div></button\n  >\n</nav>\n\n<style lang=\"scss\">\n  @import '../../scss/mixins';\n\n  nav.pagination {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    button {\n      border: 1px solid var(--theme-colour-text-secondary, var(--tr-light-grey));\n      border-radius: 50%;\n      @include bg;\n      @include text-secondary;\n      cursor: pointer;\n      width: 35px;\n      height: 35px;\n      &:disabled {\n        cursor: default;\n        color: var(--theme-colour-brand-rules);\n        border-color: var(--theme-colour-brand-rules);\n        .icon-wrapper:hover {\n          color: var(--theme-colour-brand-rules);\n          border-color: var(--theme-colour-brand-rules);\n        }\n      }\n      .icon-wrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        white-space: nowrap;\n        &:hover {\n          @include text-primary;\n          border-color: var(--theme-colour-text-primary, var(--tr-medium-grey));\n        }\n      }\n    }\n    .label {\n      display: flex;\n      align-items: center;\n      flex-direction: column;\n      width: auto;\n      min-width: 5rem;\n    }\n  }\n\n  .visually-hidden {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  }\n</style>\n","<script lang=\"ts\">\n  import { createEventDispatcher } from 'svelte';\n  import type { Option } from '../@types/global';\n\n  /**\n   * The label that appears above the select input.\n   * @type {string}\n   */\n  export let label: string = '';\n\n  /**\n   * The label that appears above the select input.\n   * @type {Array}\n   */\n  export let options: Option[] = [];\n\n  const dispatch = createEventDispatcher();\n\n  function input(event) {\n    const value = event.target.value;\n    dispatch('select', { value });\n  }\n</script>\n\n<div class=\"select\">\n  {#if label}\n    <label class=\"body-caption block\" for=\"select--input\">{label}</label>\n  {/if}\n  <select\n    class=\"select--input body-caption fpx-2\"\n    name=\"select--input\"\n    id=\"select--input\"\n    on:input=\"{input}\"\n  >\n    {#each options as obj}\n      <option value=\"{obj.value}\">{obj.text}</option>\n    {/each}\n  </select>\n</div>\n\n<style lang=\"scss\">\n  @import '../../scss/mixins';\n\n  .select {\n    width: 250px;\n\n    .select--input {\n      position: relative;\n      height: 2.15rem;\n      border: 1px solid var(--theme-colour-brand-rules, var(--tr-muted-grey));\n      border-radius: 0.25rem;\n      width: 100%;\n\n      -moz-appearance: none; /* Firefox */\n      -webkit-appearance: none; /* Safari and Chrome */\n      appearance: none; /* Remove the default arrow */\n\n      background: transparent;\n      background-image: url('data:image/svg+xml;utf8,<svg width=\"15\" height=\"9\" viewBox=\"0 0 15 9\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.76474 8.30466L0.236082 1.54523C-0.0786943 1.21934 -0.0786943 0.69069 0.236082 0.364804C0.550521 0.0392666 1.19794 0.0403099 1.51305 0.364804L7.33483 6.49522L12.9249 0.475171C13.3549 0.0451683 14.1195 0.0396141 14.4339 0.365152C14.7487 0.691037 14.7487 1.21969 14.4339 1.54557L7.90492 8.30466C7.59015 8.63054 7.07952 8.63054 6.76474 8.30466Z\" fill=\"gray\"/></svg>');\n      background-repeat: no-repeat;\n      background-position-x: 225px;\n      background-position-y: 55%;\n    }\n    .select--input::-ms-expand {\n      display: none; /* Remove the default arrow in Internet Explorer 11 */\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  /**\n   * The direction of the sort. By default it's ascending.\n   * @type {SortDirection}\n   */\n  type SortDirection = 'ascending' | 'descending';\n  export let sortDirection: SortDirection = 'ascending';\n\n  /**\n   * Whether or not this arrow is currently sorting. It is false by default.\n   * @type {boolean}\n   */\n  export let active: boolean = false;\n</script>\n\n<svg\n  width=\"15\"\n  height=\"21\"\n  viewBox=\"0 0 15 21\"\n  fill=\"none\"\n  xmlns=\"http://www.w3.org/2000/svg\"\n  class=\"avoid-clicks\"\n>\n  <path\n    class:active=\"{sortDirection === 'descending' && active}\"\n    d=\"M6.76474 20.2244L0.236082 13.4649C-0.0786943 13.139 -0.0786943 12.6104 0.236082 12.2845C0.550521 11.959 1.19794 11.96 1.51305 12.2845L7.33483 12.2845L13 12.2845C13.43 11.8545 14.1195 11.9593 14.4339 12.2849C14.7487 12.6107 14.7487 13.1394 14.4339 13.4653L7.90492 20.2244C7.59015 20.5503 7.07952 20.5503 6.76474 20.2244Z\"\n  ></path>\n  <path\n    class:active=\"{sortDirection === 'ascending' && active}\"\n    d=\"M7.90518 0.244414L14.4338 7.00385C14.7486 7.32973 14.7486 7.85838 14.4338 8.18427C14.1194 8.50981 13.472 8.50876 13.1569 8.18427L7.33509 8.18427L1.66992 8.18427C1.23992 8.61427 0.550443 8.50946 0.236003 8.18392C-0.0787725 7.85803 -0.0787725 7.32938 0.236003 7.0035L6.765 0.244414C7.07978 -0.0814713 7.5904 -0.0814713 7.90518 0.244414Z\"\n  ></path>\n</svg>\n\n<style lang=\"scss\">\n  .avoid-clicks {\n    pointer-events: none;\n  }\n  path {\n    fill: var(--theme-colour-brand-rules, var(--tr-muted-grey));\n    &.active {\n      fill: var(--theme-colour-text-primary, var(--tr-dark-grey));\n    }\n  }\n</style>\n","export function filterArray(data, searchText, filterField, filterValue) {\n  if (searchText) {\n    data = data.filter((item) => {\n      return item.searchStr.includes(searchText.toLowerCase());\n    });\n  }\n  if (filterValue && filterValue) {\n    data = data.filter((item) => {\n      return item[filterField] === filterValue;\n    });\n  }\n  return data;\n}\n\nexport function paginateArray(array, pageSize, pageNumber) {\n  return array.slice((pageNumber - 1) * pageSize, pageNumber * pageSize);\n}\n\nexport function uniqueAttr(array, attr) {\n  return array.map((e) => e[attr]).filter(unique);\n}\n\nexport function unique(value, index, array) {\n  return array.indexOf(value) === index;\n}\n\nexport function getOptions(data, attr) {\n  // Get all the unique values in the provided field. Sort it.\n  const attrList = uniqueAttr(data, attr).sort((a, b) => a.localeCompare(b));\n\n  // Tack 'All' as the front as the first option.\n  attrList.unshift('All');\n\n  // Convert the list into Option typed objects ready for our Select component\n  return attrList.map((a) => ({ text: a, value: a }));\n}\n","<!-- @component `Table` [Read the docs.](https://reuters-graphics.github.io/graphics-components/?path=/docs/components-Table--default) -->\n<script lang=\"ts\">\n  import { onMount } from 'svelte';\n\n  /**\n   * A source for the data.\n   * @type []\n   * @required\n   */\n  export let data: [];\n\n  /**\n   * A title that runs above the table.\n   * @type {string}\n   */\n  export let title: string | null = null;\n\n  /**\n   * A block of text that runs above the table.\n   * @type {string}\n   */\n  export let dek: string | null = null;\n\n  /**\n   * A footnote that runs below the table.\n   * @type {string}\n   */\n  export let notes: string | null = null;\n\n  /**\n   * A source line that runs below the table.\n   * @type {string}\n   */\n  export let source: string | null = null;\n\n  /**\n   * list of the fields to include in the table. By default everything goes.\n   * @type []\n   */\n  export let includedFields: string[] = Object.keys(data[0]).filter(\n    (f) => f !== 'searchStr'\n  );\n\n  /**\n   * Whether or not the table is cutoff after a set number of rows.\n   * @type {boolean}\n   */\n  export let truncated: boolean = false;\n\n  /**\n   * If the table is truncated, how many rows to allow before the cutoff.\n   * @type {number}\n   */\n  export let truncateLength: number = 5;\n\n  /**\n   * Whether or not the table is paginated after a set number of rows.\n   * @type {boolean}\n   */\n  export let paginated: boolean = false;\n\n  /**\n   * The default page size.\n   * @type {number}\n   */\n  export let pageSize: number = 25;\n\n  /**\n   * Whether or not searches are allowed.\n   * @type {boolean}\n   */\n  export let searchable: boolean = false;\n\n  /**\n   * The placeholder text that appears in the search box.\n   * @type {string}\n   */\n  export let searchPlaceholder: string = 'Search in table';\n\n  /**\n   * A field to offer uses as an interactive filter.\n   * @type {string}\n   */\n  export let filterField: string;\n\n  /**\n   * The label to place above the filter box\n   * @type {string}\n   */\n  export let filterLabel: string;\n\n  /**\n   * Whether or not sorts are allowed.\n   * @type {boolean}\n   */\n  export let sortable: boolean = false;\n\n  /**\n   * The column to sort by. By default it's the first header.\n   * @type {string}\n   */\n  export let sortField: string = Object.keys(data[0])[0];\n\n  /**\n   * The columns that are allowed to sort. It's all of them by default.\n   * @type {string}\n   */\n  export let sortableFields: string[] = Object.keys(data[0]).filter(\n    (f) => f !== 'searchStr'\n  );\n\n  /**\n   * The direction of the sort. By default it's ascending.\n   * @type {SortDirection}\n   */\n  type SortDirection = 'ascending' | 'descending';\n  export let sortDirection: SortDirection = 'ascending';\n\n  /**\n   * Custom field formatting functions. Should be keyed to the name of the field.\n   * @type {object}\n   */\n  export let fieldFormatters: object = {};\n\n  /** Width of the component within the text well. */\n  type ContainerWidth = 'normal' | 'wide' | 'wider' | 'widest' | 'fluid';\n  export let width: ContainerWidth = 'normal';\n\n  /** Add an ID to target with SCSS. */\n  export let id: string = '';\n\n  /** Add a class to target with SCSS. */\n  let cls: string = '';\n  export { cls as class };\n\n  /** Import local helpers */\n  import Block from '../Block/Block.svelte';\n  import Pagination from './Pagination.svelte';\n  import SearchInput from '../SearchInput/SearchInput.svelte';\n  import Select from './Select.svelte';\n  import SortArrow from './SortArrow.svelte';\n  import { filterArray, paginateArray, getOptions } from './utils.js';\n\n  /** Set truncate, filtering and pagination configuration */\n  let showAll = false;\n  let pageNumber = 1;\n  let searchText = '';\n  const filterList = filterField ? getOptions(data, filterField) : undefined;\n  let filterValue = '';\n  $: filteredData = filterArray(data, searchText, filterField, filterValue);\n  $: sortedData = sortArray(filteredData, sortField, sortDirection);\n  $: currentPageData = truncated\n    ? showAll\n      ? sortedData\n      : sortedData.slice(0, truncateLength + 1)\n    : paginated\n    ? paginateArray(sortedData, pageSize, pageNumber)\n    : sortedData;\n\n  //* * Handle show all, search, filter, sort and pagination events */\n  function toggleTruncate(event) {\n    showAll = !showAll;\n  }\n\n  function handleSearchInput(event) {\n    searchText = event.detail.value;\n    pageNumber = 1;\n  }\n\n  function handleFilterInput(event) {\n    const value = event.detail.value;\n    filterValue = value === 'All' ? '' : value;\n    pageNumber = 1;\n  }\n\n  function handleSort(event) {\n    if (!sortable) return;\n    sortField = event.target.getAttribute('data-field');\n    sortDirection = sortDirection === 'ascending' ? 'descending' : 'ascending';\n  }\n\n  function sortArray(array, column, direction) {\n    if (!sortable) return array;\n    return array.sort((a, b) => {\n      if (a[column] < b[column]) {\n        return direction === 'ascending' ? -1 : 1;\n      } else if (a[column] > b[column]) {\n        return direction === 'ascending' ? 1 : -1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  function formatValue(item, field) {\n    const value = item[field];\n    if (field in fieldFormatters) {\n      const func = fieldFormatters[field];\n      return func(value);\n    } else {\n      return value;\n    }\n  }\n\n  /** Boot it up. */\n  onMount(() => {\n    data.forEach((d: any) => {\n      // Compose the string we will allow users to search\n      d.searchStr = includedFields\n        .map((field) => d[field])\n        .join(' ')\n        .toLowerCase();\n    });\n  });\n</script>\n\n<Block width=\"{width}\" id=\"{id}\" class=\"fmy-6 {cls}\">\n  <article class=\"table-wrapper\">\n    {#if title || dek || searchable || filterList}\n      <header class=\"table--header w-full\">\n        {#if title}\n          <h3 class=\"table--header--title\">{@html title}</h3>\n        {/if}\n        {#if dek}\n          <p class=\"table--header--dek body-note\">{@html dek}</p>\n        {/if}\n        {#if searchable || filterList}\n          <nav class=\"input fmx-0 fmy-2\">\n            {#if filterList}\n              <div class=\"table--header--filter\">\n                <Select\n                  label=\"{filterLabel || filterField}\"\n                  options=\"{filterList}\"\n                  on:select=\"{handleFilterInput}\"\n                />\n              </div>\n            {/if}\n            {#if searchable}\n              <div class=\"table--header--search\">\n                <SearchInput\n                  bind:searchPlaceholder=\"{searchPlaceholder}\"\n                  on:search=\"{handleSearchInput}\"\n                />\n              </div>\n            {/if}\n          </nav>\n        {/if}\n      </header>\n    {/if}\n    <section class=\"table w-full\">\n      <table\n        class=\"w-full\"\n        class:paginated=\"{paginated}\"\n        class:truncated=\"{truncated &&\n          !showAll &&\n          data.length > truncateLength}\"\n      >\n        <thead class=\"table--thead\">\n          <tr>\n            {#each includedFields as field}\n              <th\n                scope=\"col\"\n                class=\"table--thead--th h4 pl-0 py-2 pr-2\"\n                class:sortable=\"{sortable && sortableFields.includes(field)}\"\n                class:sort-ascending=\"{sortable &&\n                  sortField === field &&\n                  sortDirection === 'ascending'}\"\n                class:sort-descending=\"{sortable &&\n                  sortField === field &&\n                  sortDirection === 'descending'}\"\n                data-field=\"{field}\"\n                on:click=\"{handleSort}\"\n              >\n                {field}\n                {#if sortable && sortableFields.includes(field)}\n                  <div class=\"table--thead--sortarrow fml-1 avoid-clicks\">\n                    <SortArrow\n                      bind:sortDirection=\"{sortDirection}\"\n                      active=\"{sortField === field}\"\n                    />\n                  </div>\n                {/if}\n              </th>\n            {/each}\n          </tr>\n        </thead>\n        <tbody class=\"table--tbody\">\n          {#each currentPageData as item, idx}\n            <tr data-row-index=\"{idx}\">\n              {#each includedFields as field}\n                <td\n                  class=\"body-note pl-0 py-2 pr-2\"\n                  data-row-index=\"{idx}\"\n                  data-field=\"{field}\"\n                  data-value=\"{item[field]}\"\n                >\n                  {@html formatValue(item, field)}\n                </td>\n              {/each}\n            </tr>\n          {/each}\n          {#if searchable && searchText && currentPageData.length === 0}\n            <tr>\n              <td class=\"no-results\" colspan=\"{includedFields.length}\">\n                No results found for \"{searchText}\"\n              </td>\n            </tr>\n          {/if}\n        </tbody>\n        {#if notes || source}\n          <tfoot class=\"table--tfoot\">\n            {#if notes}\n              <tr>\n                <td class=\"\" colspan=\"{includedFields.length}\">\n                  <div class=\"fmt-2\">\n                    {@html notes}\n                  </div>\n                </td>\n              </tr>\n            {/if}\n            {#if source}\n              <tr>\n                <td class=\"\" colspan=\"{includedFields.length}\">\n                  <div class=\"fmt-1\">\n                    {@html source}\n                  </div>\n                </td>\n              </tr>\n            {/if}\n          </tfoot>\n        {/if}\n      </table>\n    </section>\n    {#if truncated && data.length > truncateLength}\n      <nav\n        aria-label=\"Show all button\"\n        class=\"show-all flex items-center justify-center fmt-2\"\n      >\n        <button class=\"body-caption\" on:click=\"{toggleTruncate}\"\n          >{#if showAll}Show fewer rows{:else}Show {data.length -\n              truncateLength} more rows{/if}</button\n        >\n      </nav>\n    {/if}\n    {#if paginated}\n      <Pagination\n        bind:pageNumber=\"{pageNumber}\"\n        bind:pageSize=\"{pageSize}\"\n        bind:pageLength=\"{currentPageData.length}\"\n        bind:n=\"{sortedData.length}\"\n      />{/if}\n  </article>\n</Block>\n\n<style lang=\"scss\">\n  @import '../../scss/mixins';\n\n  section.table {\n    overflow-x: auto;\n  }\n  section.table table {\n    background-color: transparent;\n    border-collapse: separate;\n    border-spacing: 0;\n    thead {\n      tr {\n        th {\n          border-bottom: 1px solid var(--theme-colour-text-primary);\n          @include bg;\n          text-align: inherit;\n          &.sortable {\n            cursor: pointer;\n            white-space: nowrap;\n          }\n          .table--thead--sortarrow {\n            display: inline-block;\n            position: relative;\n            top: 5px;\n          }\n        }\n      }\n    }\n    tbody {\n      td {\n        @include text-sm;\n        @include font-regular;\n        vertical-align: top;\n        border-bottom: 1px solid\n          var(--theme-colour-brand-rules, var(--tr-muted-grey));\n        &.no-results {\n          @include text-secondary;\n        }\n      }\n    }\n    tfoot.table--tfoot {\n      tr {\n        border-bottom: 0;\n      }\n      td {\n        @include body-caption;\n      }\n    }\n    &.truncated {\n      tbody tr:last-child:not(:first-child) {\n        border-bottom: none;\n        mask-image: linear-gradient(\n          to bottom,\n          var(--theme-colour-text-primary) 0%,\n          transparent 100%\n        );\n        -webkit-mask-image: linear-gradient(\n          to bottom,\n          var(--theme-colour-text-primary) 0%,\n          transparent 100%\n        );\n      }\n    }\n  }\n\n  .avoid-clicks {\n    pointer-events: none;\n  }\n\n  nav.input {\n    padding: 0;\n    width: 100%;\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-end;\n    flex-direction: row;\n    flex-wrap: wrap;\n    gap: clamp(0.31rem, calc(0.29rem + 0.1vw), 0.38rem);\n  }\n\n  nav.show-all {\n    button {\n      min-width: 13rem;\n      height: 2.15rem;\n      border: 1px solid var(--theme-colour-brand-rules, var(--tr-muted-grey));\n      border-radius: 0.25rem;\n      @include bg;\n      cursor: pointer;\n    }\n  }\n</style>\n","<script>\n  import { Meta, Template, Story } from '@storybook/addon-svelte-csf';\n\n  // Don't lose the \"?raw\" in markdown imports!\n  // @ts-ignore\n  import componentDocs from './stories/docs/component.md?raw';\n  // @ts-ignore\n  import metadataDocs from './stories/docs/metadata.md?raw';\n  // @ts-ignore\n  import truncateDocs from './stories/docs/truncate.md?raw';\n  // @ts-ignore\n  import paginateDocs from './stories/docs/paginate.md?raw';\n  // @ts-ignore\n  import searchDocs from './stories/docs/search.md?raw';\n  // @ts-ignore\n  import filterDocs from './stories/docs/filter.md?raw';\n  // @ts-ignore\n  import bothDocs from './stories/docs/both.md?raw';\n  // @ts-ignore\n  import sortDocs from './stories/docs/sort.md?raw';\n  // @ts-ignore\n  import formatDocs from './stories/docs/format.md?raw';\n  // @ts-ignore\n  import styleDocs from './stories/docs/style.md?raw';\n\n  import Table from './Table.svelte';\n\n  import { withComponentDocs, withStoryDocs } from '$docs/utils/withParams.js';\n\n  // @ts-ignore\n  import pressFreedom from './stories/pressFreedom.json';\n  import homeRuns from './stories/homeRuns.json';\n  import richestWomen from './stories/richestWomen.json';\n\n  const metaProps = {\n    ...withComponentDocs(componentDocs),\n    argTypes: {\n      width: {\n        control: 'select',\n        options: ['normal', 'wide', 'wider', 'widest', 'fluid'],\n      },\n    },\n  };\n</script>\n\n<Meta title=\"Components/Table\" component=\"{Table}\" {...metaProps} />\n\n<Template let:args>\n  <Table {...args} />\n</Template>\n\n<Story\n  name=\"Default\"\n  args=\"{{\n    width: 'normal',\n    data: homeRuns,\n  }}\"\n/>\n\n<Story\n  name=\"Metadata\"\n  {...withStoryDocs(metadataDocs)}\n  args=\"{{\n    width: 'normal',\n    data: homeRuns,\n    title: 'Career home run leaders',\n    dek: 'In baseball, a home run (also known as a \"dinger\" or \"tater\") occurs when a batter hits the ball over the outfield fence. When a home run is hit, the batter and any runners on base are able to score.',\n    notes: 'Note: As of Opening Day 2023',\n    source: 'Source: Baseball Reference',\n  }}\"\n/>\n\n<Story\n  name=\"Truncate\"\n  {...withStoryDocs(truncateDocs)}\n  args=\"{{\n    data: homeRuns,\n    truncated: true,\n    source: 'Source: Baseball Reference',\n  }}\"\n/>\n\n<Story\n  name=\"Paginate\"\n  {...withStoryDocs(paginateDocs)}\n  args=\"{{\n    data: pressFreedom,\n    title: 'Press Freedom Index',\n    paginated: true,\n    source: 'Source: Reporters Without Borders',\n  }}\"\n/>\n\n<Story\n  name=\"Search\"\n  {...withStoryDocs(searchDocs)}\n  args=\"{{\n    data: pressFreedom,\n    searchable: true,\n    paginated: true,\n    title: 'Press Freedom Index',\n    source: 'Source: Reporters Without Borders',\n  }}\"\n/>\n\n<Story\n  name=\"Filter\"\n  {...withStoryDocs(filterDocs)}\n  args=\"{{\n    data: pressFreedom,\n    paginated: true,\n    filterField: 'Region',\n    title: 'Press Freedom Index',\n    notes: 'Source: Reporters Without Borders',\n  }}\"\n/>\n\n<Story\n  name=\"Search and filter\"\n  {...withStoryDocs(bothDocs)}\n  args=\"{{\n    data: pressFreedom,\n    searchable: true,\n    filterField: 'Region',\n    paginated: true,\n    title: 'Press Freedom Index',\n    dek: 'Reporters Without Borders ranks countries based on their level of press freedom using criteria such as the degree of media pluralism and violence against journalists.',\n    source: 'Source: Reporters Without Borders',\n  }}\"\n/>\n\n<Story\n  name=\"Sort\"\n  {...withStoryDocs(sortDocs)}\n  args=\"{{\n    data: pressFreedom,\n    sortable: true,\n    sortField: 'Score',\n    sortDirection: 'descending',\n    paginated: true,\n    title: 'Press Freedom Index',\n    notes: 'Note: data as of 2018',\n    source: 'Source: Reporters Without Borders',\n  }}\"\n/>\n\n<Story\n  name=\"Format\"\n  {...withStoryDocs(formatDocs)}\n  args=\"{{\n    data: richestWomen,\n    title: 'The Richest Women in the World',\n    source: 'Source: Forbes',\n    sortable: true,\n    sortField: 'Net worth (in billions)',\n    sortDirection: 'descending',\n    fieldFormatters: { 'Net worth (in billions)': (v) => '$' + v.toFixed(1) },\n  }}\"\n/>\n\n<Story\n  name=\"Style\"\n  {...withStoryDocs(styleDocs)}\n  args=\"{{\n    id: 'custom-table',\n    data: richestWomen,\n    title: 'The Richest Women in the World',\n    source: 'Source: Forbes',\n  }}\"\n  ,\n/>\n"],"names":["componentDocs","metadataDocs","truncateDocs","paginateDocs","searchDocs","filterDocs","bothDocs","sortDocs","formatDocs","styleDocs","insert","target","svg","anchor","append","path","t7_value","intcomma","ctx","button0","button0_disabled_value","button1","button1_disabled_value","nav","div0","span0","div2","div1","div3","span1","current","dirty","set_data","t7","pageNumber","$$props","pageSize","pageLength","n","goToPreviousPage","$$invalidate","goToNextPage","numPages","minRow","maxRow","label_1","t_value","option","option_value_value","t","create_if_block","i","div","select","label","options","dispatch","createEventDispatcher","input","event","value","path0","path1","sortDirection","active","filterArray","data","searchText","filterField","filterValue","item","paginateArray","array","uniqueAttr","attr","e","unique","index","getOptions","attrList","a","b","create_if_block_13","create_if_block_12","if_block2","create_if_block_9","header","h3","p","create_if_block_11","create_if_block_10","if_block0","select_changes","sortarrow_changes","show_if","toggle_class","th","t0","t0_value","td","td_data_value_value","raw_value","tr","td_colspan_value","create_if_block_5","create_if_block_4","tfoot","create_if_block_2","button","t1","t1_value","pagination_props","pagination_changes","create_if_block_8","if_block1","create_if_block_6","create_if_block_3","if_block3","create_if_block_1","table","article","section","thead","tbody","each_blocks_1","title","dek","notes","source","includedFields","f","truncated","truncateLength","paginated","searchable","searchPlaceholder","filterLabel","sortable","sortField","sortableFields","fieldFormatters","width","id","cls","showAll","filterList","toggleTruncate","handleSearchInput","handleFilterInput","handleSort","sortArray","column","direction","formatValue","field","func","onMount","d","$$self","currentPageData","sortedData","filteredData","meta_spread_levels","Table","homeRuns","withStoryDocs","pressFreedom","richestWomen","v","withComponentDocs"],"mappings":"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"}